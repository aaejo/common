services:
  kafka:
    image: 'bitnami/kafka'
    ports:
    - '9092:9092'
    environment:
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_BROKER_ID: '1'
    # KRaft settings
      KAFKA_ENABLE_KRAFT: 'yes'
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      KAFKA_CFG_NODE_ID: '1'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@127.0.0.1:9093'
    # Connectivity settings
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_CFG_LISTENERS: 'EXTERNAL://:9092,CONTROLLER://:9093,INTERNAL://:19092'
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT'
      KAFKA_CFG_ADVERTISED_LISTENERS: 'INTERNAL://kafka:19092,EXTERNAL://localhost:9092'
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: 'INTERNAL'

  kafka-console:
    image: 'docker.redpanda.com/vectorized/console:v2.1.1'
    depends_on:
    - 'kafka'
    ports:
    - '8081:8080'
    environment:
      KAFKA_BROKERS: 'kafka:19092'

  db:
    image: 'mariadb:latest'
    ports:
    - '3306:3306'
    volumes:
    # Files put in the sql/ directory of this repo will be executed on container startup
    - './sql:/docker-entrypoint-initdb.d:ro'
    environment:
      MARIADB_ROOT_PASSWORD: 'root' # Super insecure, but this is just for dev use

  adminer:
    image: 'adminer:standalone'
    depends_on:
    - 'db'
    ports:
    - '8080:8080'
    environment:
      ADMINER_DESIGN: 'dracula'

